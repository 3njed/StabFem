function pdestruct=importFFdata(mesh,fileToRead1)
%  function importFFdata
%  Imports data generated by freefem 
%  Usage : pdestruct=importFFdata(mesh,fileToRead1)
%      where mesh has been previously imported through importFFmesh.
%
%      imported data may comprise several pde fieds and scalar values, 
%       as defined in header (2nd line of file) with has the form :
%      typedata1 namedata1 typedata2 namedata2 (...)
%       typedata may be of the following types :
%           - real -> one real scalar
%           - complex -> complex number read as two reals
%           - P1 -> P1 field (compatible with the mesh)
%           - P1c -> P1 complex field
%      (to be implemented : P1L -> 1D P1 field along a boundary of the mesh) 
%
%  Result is stored in a structure pdestruct
% 
%  D. Fabre 2017 ; modified from an original program by J.Dambrine(2010)

%disp(['FUNCTION  importFFdata.m : reading file ' fileToRead1 ]);
%fileToRead1

np = mesh.np;
% Import the file
rawData1 = importdata(fileToRead1);
data = rawData1.data;


%interpret headers
header = rawData1.textdata{4};
description=textscan(header,'%s');
numfields = length(description{1})/2;


%create structure
%pdestruct.mesh = mesh.name;
indexdata = 1;
pdestruct.mesh = mesh;
Ndata = 0;
for ifield = 1:numfields
   typefield = description{1}{2*ifield-1};
   namefield = description{1}{2*ifield};
   switch(typefield)
        case('real')  
            Ndata = Ndata+1;
        case('int')  
            Ndata = Ndata+1;
        case('complex') 
            Ndata = Ndata+2;
        case('P1')  
            Ndata = Ndata+np;
        case('P1c')  
            Ndata = Ndata+2*np;
   end
end

if(Ndata~=length(data))
    error(['Error in importFFdata : wrong data number ; expecting ' num2str(Ndata) ' reading ' num2str(length(data)) ...
        '  (Mesh may be incompatible)']) 
end

for ifield = 1:numfields
    typefield = description{1}{2*ifield-1};
    namefield = description{1}{2*ifield};
    switch(typefield)
        case('real')
            value = data(indexdata);
            indexdata = indexdata+1;
            pdestruct=setfield(pdestruct,namefield,value);
        case('int')
            value = data(indexdata);
            indexdata = indexdata+1;
            pdestruct=setfield(pdestruct,namefield,value);
            %disp([ namefield, ' = ',num2str(value),' ; ']);
        case('complex')
            valueR = data(indexdata);valueI = data(indexdata+1);
            indexdata = indexdata+2;
            pdestruct=setfield(pdestruct,namefield,valueR+1i*valueI);
            %disp([ namefield, ' = ',num2str(valueR+1i*valueI), ' ; ']);
        case('P1')
            value = data(indexdata:indexdata+np-1);
            indexdata = indexdata+np;
            pdestruct=setfield(pdestruct,namefield,value);
            %disp(['importing P1 field ', namefield, ' ; ']);
        case('P1c')
            value = data(indexdata:indexdata+2*np-1);
            valueC = value(1:2:end-1)+1i*value(2:2:end);
            indexdata = indexdata+2*np;
            pdestruct=setfield(pdestruct,namefield,valueC); 
            %disp(['importing P1 complex field ', namefield, ' ; ']);
    end

       
end
%disp(['END FUNCTION  importFFdata.m'  ]);disp(' ');

end
