//
//  PROGRAM mesh.edp
//
//  Example of mesh generator for GlobalFem 
//
//  OUTPUT FILES :
// 		mesh.msh 			->  mesh in Freefem format
//		mesh.mshinfo 		->  descriptor 
//      BaseFlow_guess.txt 	->  base flow used to start first newton iteration
//      BaseFlow.ff2m 	->  (ff2m format)
//
//	convention for boundary conditions :
//  1 = inlet ; 2 (and 21,22,23) = wall ; 3 = outlet ; 6 = axis

//  D. Fabre, June 2017


		
		real xmin = -10;
		real xmax = 20;
		real rmax = 10;
		 
		
	
		real x0=0.;	 	// centre en x de l'ellipse
		real y0=0.;		// centre en y de l'ellipse
		real rayon = 0.5;
		real ep = 0.333333333;

		
		cout << "dimensions reelles domaine : [" << xmin << "," << xmax << "] x [0," << rmax << "] " <<  endl;
		

        border a1(t=xmin,-ep/2){ x=t; y=0;label=6;};
        border a2(t=ep/2,xmax){ x=t; y=0;label=6;};
        border aint(t=-ep/2,ep/2){x=t;y=0;label=6;};
	
        border obs1(t=0.,rayon){x=-ep/2; y=t ;label=21;};
        border obs2(t=-ep/2,ep/2){x=t; y=rayon;label=22;};
        border obs3(t=rayon,0){x=+ep/2; y=t; label=23;};
		
		border out(t=0,rmax){ x=xmax; y=t; label=3; };
		border lat(t=xmax,xmin){ x=t; y=rmax;label=3;};              
		border in(t=rmax,0){ x=xmin; y=t;label=1;};


		int nd = 1;
		int nb = 40;            
            

        mesh th2;
               
               th2=buildmesh(aint(nb*ep)+obs1(-rayon*nb)+obs2(-ep*nb)+obs3(-rayon*nb)
             +  a1(nd*(-ep/2-xmin))+ a2(nd*(xmax-ep/2))
             +out(rmax*nd)+in(rmax*nd)+lat((xmax-xmin)*nd));
	       
		plot(th2,wait=1);

	

        savemesh(th2,"mesh.msh");
        {
			ofstream file("mesh.mshinfo"); 
			file << "Mesh for a thick disk in a tube" << endl;
			file << "PROBLEM TYPE :" << endl;
			file << "AxiXRPOROUS" << endl;
			file << "PARAMETERS : " << endl;
			file << "Rdisk  Hdisk  Rpipe  Xmin  Xmax" << endl;
			file << rayon << endl << ep << endl << rayon << endl << xmin << endl << xmax  << endl;
		}
        
        fespace femp1(th2,P1);
        fespace femp2xfemp2xfemp1(th2,[P2,P2,P1]);
        femp2xfemp2xfemp1 [urp,uzp,pp]=[0,0,0];
	    ofstream file("BaseFlow_guess.txt");
	    file << urp[] << endl;
	    file <<  endl << 0 << endl;
		//exec("cp BaseFlow_guess.txt BaseFlow.txt");
	
	
	femp1 ut,vt,pt,vort;
	femp1 yy,xx;
	yy = y; xx= x;
	ut=uzp;
	vt=urp;
	pt=pp;
	vort=dx(vt)-dy(ut);


//// EXPORTATION DU CHAMP DE BASE AUX FORMATS TECPLOT ET MATLAB
{
	ofstream file("BaseFlow.ff2m");
	real Rpipe = yy[].max;
	    file << "### Data generated by Freefem++ ; " << endl;
    file << "Base flow for a disk or radius 0.5 and thickness Hdisk in a pipe of radius Rpipe" << endl;
    file << "Format : " << endl;	
	file << "real Re P1 u0 P1 v0 P1 p0 P1 vort0" << endl << endl ; 
	file << 0 << endl;	
			{
			for (int j=0;j<ut[].n ; j++) file << ut[][j] << endl;
			for (int j=0;j<ut[].n ; j++) file << vt[][j] << endl;
			for (int j=0;j<ut[].n ; j++) file << pt[][j] << endl;
			for (int j=0;j<ut[].n ; j++) file << vort[][j] << endl;
		}; 
}


	    

        
		plot(th2,wait=1,bb=[[-.5,0],[.5,1.5]]);
		plot(th2,wait=1,bb=[[-1.,0],[4.,3.]]);
		plot(th2,wait=1);
		
