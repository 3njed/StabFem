//
//  PROGRAM mesh.edp
//
//  Example of mesh generator for GlobalFem 
//
//  OUTPUT FILES :
// 		mesh.msh 			->  mesh in Freefem format
//		mesh.ff2m 		->  descriptor 
//      BaseFlow_guess.txt 	->  base flow used to start first newton iteration
//      BaseFlow.ff2m 	->  (ff2m format)
//
//	convention for boundary conditions :
//  1 = inlet ; 2 (and 21,22,23) = wall ; 3 = outlet ; 6 = axis

//  D. Fabre, June 2017

include "Macros_StabFem.edp";

		
		real xmin = -10;
		real xmax = 20;
		real rmax = 10;
		 
		
	
		real x0=0.;	 	// centre en x de l'ellipse
		real y0=0.;		// centre en y de l'ellipse
		real rayon = 0.5;
		real ep = 0.333333333;

		
		cout << "dimensions reelles domaine : [" << xmin << "," << xmax << "] x [0," << rmax << "] " <<  endl;
		

        border a1(t=xmin,-ep/2){ x=t; y=0;label=6;};
        border a2(t=ep/2,xmax){ x=t; y=0;label=6;};
        border aint(t=-ep/2,ep/2){x=t;y=0;label=6;};
	
        border obs1(t=0.,rayon){x=-ep/2; y=t ;label=21;};
        border obs2(t=-ep/2,ep/2){x=t; y=rayon;label=22;};
        border obs3(t=rayon,0){x=+ep/2; y=t; label=23;};
		
		border out(t=0,rmax){ x=xmax; y=t; label=3; };
		border lat(t=xmax,xmin){ x=t; y=rmax;label=3;};              
		border in(t=rmax,0){ x=xmin; y=t;label=1;};


		int nd = 1;
		int nb = 40;            
            

        mesh th;
               
               th=buildmesh(aint(nb*ep)+obs1(-rayon*nb)+obs2(-ep*nb)+obs3(-rayon*nb)
             +  a1(nd*(-ep/2-xmin))+ a2(nd*(xmax-ep/2))
             +out(rmax*nd)+in(rmax*nd)+lat((xmax-xmin)*nd));
	       
		plot(th,wait=1);

	

        savemesh(th,ffdatadir+"mesh.msh");
       
// FIRST AUXILIARY FILE for Stabfem : SF_Init.ff2m
{
            ofstream file(ffdatadir+"SF_Init.ff2m"); 
			file << "Defininition of problem type and geometrical parameters for StabFem. Problem type : " << endl;
			file << "AxiXRPOROUS" << endl;
			file << "Format :  (this list may contain geometrical parameters such as domain dimensions, etc..)" << endl;
			file << "real Rdisk real Hdisk real Rmax real Xmin real Xmax" << endl;
			file <<  rayon  << endl << ep << endl << rmax << endl << xmin << endl << xmax << endl;
}


// SECOND AUXILIARY FILE  for Stabfem : mesh.ff2m
	SFWriteMesh(ffdatadir+"mesh.ff2m",th)



// CREATE A guess for the base flow (here starting from zero works very well)
 		fespace femp1(th,P1);
        fespace femp2xfemp2xfemp2xfemp1(th,[P2,P2,P2,P1]);
        femp2xfemp2xfemp2xfemp1 [ux,ur,uphi,up]=[0,0,0,0];
        real Re = 0;real nu=1; // these two are useless at this stage but required in the macros 
        
// Save in txt format (for FreeFem)        
      	{
      	ofstream file(ffdatadir+"BaseFlow_guess.txt");
	    file << ur[] << endl;
	    file <<  endl << 0 << endl;
      	}
      	
// Save in ff2m format (for StabFem)	    
IFMACRO(!Porosity)
macro Porosity 0//EOM
ENDIFMACRO
IFMACRO(!Omegax)
macro Omegax 0//EOM
ENDIFMACRO

SFWriteBaseFlow(ffdatadir+"BaseFlow.ff2m",u,"BaseFlow",0,Porosity,Omegax);
	     
