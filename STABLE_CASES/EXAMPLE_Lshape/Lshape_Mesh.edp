/// Program Lshape_Mesh.edp : generation of the mesh for the basic StabFem example
include "Macros_StabFem.edp";

int nn; 
cout << "Enter the mesh density : " << endl;
cin >> nn;
cout << "### Mesh density nn =  " << nn << endl;

border a(t=0,1){x=t;y=0;label=1;}; 
border b(t=0,0.5){x=1;y=t;label=1;}; 
border c(t=0,0.5){x=1-t;y=0.5;label=1;}; 
border d(t=0.5,1){x=0.5;y=t;label=1;}; 
border e(t=0.5,1){x=1-t;y=1;label=1;}; 
border f(t=0,1){x=0;y=1-t;label=1;}; 

mesh th = buildmesh ( a(nn) + b(.5*nn) + c(.5*nn) +d(.5*nn) + e(.5*nn) + f(nn));
IFMACRO(FREEFEMPLOTS,YES)
plot(th);
ENDIFMACRO

/* First Save mesh in .msh format for subsequent usage by FreeFem++ */ 
savemesh(th,"mesh.msh"); 

/* Secondly save as mesh.ff2m for the Matab driver */
SFWriteMesh("mesh.ff2m",th);

/* Third, generate auxiliary file SF_Init.ff2m */
ofstream file2("SF_Init.ff2m"); 
file2 <<  "### Data generated by Freefem++ ; " << endl;
file2 << "(Auxiliary file with information on initial mesh)" << endl;
file2 << "problemtype EXAMPLE" << endl;
file2 << "real R int InitialMeshDensity" << endl;
file2 << 1  << endl << nn << endl;

/* LAST AUXILIARY FILE for Stabfem : SF_Geom.edp */
{
			ofstream file2("SF_Geom.edp"); 
			file2 << "/* Description geometry (file automatically created ; to be included in the FreeFem programs) */" << endl;
            file2 << " real SFGeomLengthscale = 1 ; /* length scale for nondimensionalization */" << endl ;
            file2 << " real SFGeomVelocityscale = 1 ; /* velocity scale for nondimensionalization */ " << endl ;
}
