
/// Example for Freefem_to_matlab
/// Version D.F. december 2017


verbosity=0; 
border a(t=0,1){x=t;y=0;label=1;}; 
border b(t=0,0.5){x=1;y=t;label=1;}; 
border c(t=0,0.5){x=1-t;y=0.5;label=1;}; 
border d(t=0.5,1){x=0.5;y=t;label=1;}; 
border e(t=0.5,1){x=1-t;y=1;label=1;}; 
border f(t=0,1){x=0;y=1-t;label=1;}; 
//func uu= sin(y*pi)/10; func vv= cos(x*pi)/10;

int nn; // mesh density
cout << "Enter the mesh density : " << endl;
cin >> nn;
cout << "### Mesh density nn =  " << nn << endl;


mesh th = buildmesh ( a(nn) + b(.5*nn) + c(.5*nn) +d(.5*nn) + e(.5*nn) + f(nn));
savemesh(th,"mesh.msh"); // freefem

// old syntax : mesh.mshinfo
{
ofstream file("mesh.mshinfo"); 
file << "Mesh for a L-shaped domain" << endl;
file << "PROBLEM TYPE " << endl;
file << "SIMPLE_EXAMPLE" << endl;
file << "PARAMETERS" << endl;
file << "nn " << endl;
file << nn << endl;
}

// New syntax : SF_Init.ff2m
{
            ofstream file("SF_Init.ff2m"); 
			file << "Defininition of problem type and geometry for StabFem. Problem type : " << endl;
			file << "EXAMPLE" << endl;
			file << "Format :  (this list may contain geometrical parameters such as domain dimensions, etc..)" << endl;
			file << "real R " << endl;
			file << 1  << endl;
}

// New syntax : mesh.ff2m
{
            ofstream file("mesh.ff2m"); 
			file << "Mesh generated by FreeFem++ ; mesh type :" << endl;
			file << "2D" << endl;
			file << "Format : " << endl;
			file << "int np int nt int density" << endl;
			file << th.nv  << " " << th.nt << " " << nn << endl;
}



// First sample problem (consider it as base flow) : steady conduction 

fespace Vh(th,P1);
Vh u,v;
func so= 1.0;
real cpu=clock();
solve Poisson(u,v,solver=LU)=int2d(th)(dx(u)*dx(v) + dy(u)*dy(v)) - int2d(th)( so*v)+on(a,b,c,d,e,f,u=0);
//plot(th,u);


{ 
	ofstream file("BaseFlow.ff2m"); 
    file << "### Data generated by Freefem++ ; " << endl;
    file << "Temperature field in a L-shaped region ; steady conduction with constant volume source" << endl;
    file << "Format : " << endl;
	file << "P1 T" << endl << endl ; 
	for (int j=0;j<u[].n ; j++)
		file << u[][j] << endl;
}

{ 
	ofstream file("Heat_1Dcut.ff2m"); 
    file << "### Data generated by Freefem++ ; " << endl;
    file << "Temperature field in a L-shaped region ; values along a transverse line" << endl;
    int NN = 101;
    file << "Format : " << endl;
	file << "real." << NN << " Xcut" << "  real." << NN << " Tcut" << endl << endl ; 
	for (int j=0;j<NN ; j++) { file << 1./(NN-1)*j << endl;} ;
	for (int j=0;j<NN ; j++) {file  << u(1./(NN-1)*j,.25) << endl;};
    file << endl;
}



cout << " CPU time = " << clock()-cpu << endl;
