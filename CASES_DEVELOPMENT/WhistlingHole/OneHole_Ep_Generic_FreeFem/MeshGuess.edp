include"Params_Conduct.edp";



	//symetry axis
	border axis(t=-(Lcav+ep),Lext){x=t ;y=0; label=6;};
	
        //outlet
	border outlet(t=0,Rext-1){x=Lext; y=t; label=3;};
	
        //outlet
	border outletP(t=Rext-1,Rext){x=Lext; y=t; label=31;};
	
	

        //upperout
        border upperout(t=0,Lext){x=Lext-t; y=Rext; label=5;};
	

        //wallout
        border wallout(t=Rext,Rhole){x=0; y=t; label=2;};

	

        //wallb
        border wallb(t=0,ep){x=-t; y=Rhole; label=2;};
	


        //wallin
        border wallin(t=Rhole,Rcav){x=-ep; y=t; label=2;};
	


        //upperinlet
        border upperin(t=0,Lcav){x=-ep-t; y=Rcav; label=7;};

	

	//inlet
	border inlet(t=0,Rcav){x=-ep-Lcav; y=Rcav-t; label=1;};
	
	//Wake
//	border wake(t=Lin+b+e,Lin+Lout-1){x=t; y=0.75; label=8;};	

 
        	
	//PLOT

	plot(
	  axis(Ni*(Lext+Lcav+ep))  
	+ outlet(Ni*Rext) + upperout(Ni*Lext) 
	+ wallout(Ni*(Rext-Rhole)) + wallb(Ni*ep) 
	+ wallin(Ni*(Rcav-Rhole)) + upperin(Ni*Lcav) + inlet(Ni*Rcav) 
	, wait=1);

	//MESHING

	mesh Thall;
	Thall = buildmesh(  axis(Ni*(Lext+Lcav+ep))  
	+ outlet(Ni*Rext) + outletP(Ni) + upperout(Ni*Lext) 
	+ wallout(Ni*(Rext-Rhole)) + wallb(Ni*ep+1) 
	+ wallin(Ni*(Rcav-Rhole)) + upperin(Ni*Lcav) + inlet(Ni*Rcav) 
	);	
	
	exec("mkdir CHBASE");	
	
	savemesh(Thall,"CHBASE/mesh_Init.msh");
	savemesh(Thall,"mesh_guess.msh");

	fespace V1h(Thall,[P2,P2,P1]);
	V1h [v,u,p];
	u[]= 0;
	V1h<complex> [vC,uC,pC];
	uC[]= 0;
		
		
	{
		ofstream U("chbase_guess.txt");		
		U << v[];
	}
	
	{
		ofstream U("chbase_guessCOMPLEX.txt");		
		U << vC[];
	}
	
	exec("cp chbase_guess.txt CHBASE/cbn_Init.txt") ;
	
	
	plot(Thall, wait=0);

	fespace p1(Thall,P1);
	p1 yy,xx;
	xx = real(xphys);
	real xxmaxR = xx[].max;
	xx = imag(xphys);
	real xxmaxI = xx[].max;
	yy = yphys;
	real ymax = yy[].max;
	
	cout << " dimensions du domaine :  ( " 
	<< xxmaxR << " + i " << xxmaxI << " ) x " << ymax << endl;
	



